


import Helper.Helper;
import Model.Doctor;

import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author kilic
 */
public class DoctorGUI extends javax.swing.JFrame {

    private JPanel w_pane;
    private static Doctor doctor = new Doctor();
    private DefaultTableModel whourModel;
    private Object[] whourData = null;

    /**
     * Creates new form DoctorGUI
     *
     * @throws java.sql.SQLException
     */
    public DoctorGUI(Doctor doctor) throws SQLException {
        w_pane = new JPanel();
        initComponents();
        jLabel1.setText("Welcome, Dear" + doctor.getUser_name());

        whourModel = new DefaultTableModel();
        Object[] colWhour = new Object[2];
        colWhour[0] = "ID";
        colWhour[1] = "Date";
        whourModel.setColumnIdentifiers(colWhour);
        whourData = new Object[2];
        for (int i = 0; i < doctor.getWhourList(doctor.getUser_id()).size(); i++) {
            whourData[0] = doctor.getWhourList(doctor.getUser_id()).get(i).getDoctor_id();
            whourData[1] = doctor.getWhourList(doctor.getUser_id()).get(i).getWdate();
            whourModel.addRow(whourData);
        }

        table_whour = new javax.swing.JTable(whourModel);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        w_tab = new javax.swing.JTabbedPane();
        w_whour = new javax.swing.JPanel();
        select_time = new javax.swing.JComboBox<>();
        btn_addWhour = new javax.swing.JButton();
        w_scrollWhour = new javax.swing.JScrollPane();
        table_whour = new javax.swing.JTable();
        select_date = new com.toedter.calendar.JDateChooser();
        btn_deleteWhour = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hospital Management Information System");
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 16)); // NOI18N
        jLabel1.setText("Welcome, Dear");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 550, 40));
        jLabel1.getAccessibleContext().setAccessibleName("");

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 16)); // NOI18N
        jButton1.setText("LOG OUT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, 100, 30));

        w_tab.setBackground(new java.awt.Color(255, 255, 255));

        w_whour.setBackground(new java.awt.Color(255, 255, 255));
        w_whour.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        select_time.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "13:30", "14:00", "14:30", "15:00", "15:30" }));
        w_whour.add(select_time, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 10, 80, 20));

        btn_addWhour.setText("ADD");
        btn_addWhour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addWhourActionPerformed(evt);
            }
        });
        w_whour.add(btn_addWhour, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 10, 80, -1));

        table_whour.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        w_scrollWhour.setViewportView(table_whour);

        w_whour.add(w_scrollWhour, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 720, 310));
        w_whour.add(select_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 160, -1));

        btn_deleteWhour.setText("DELETE");
        btn_deleteWhour.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_deleteWhourActionPerformed(evt);
            }
        });
        w_whour.add(btn_deleteWhour, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 10, -1, -1));

        w_tab.addTab("Work Hour", w_whour);

        getContentPane().add(w_tab, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 730, 390));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void updateWhourModel(Doctor doctor) throws SQLException {  //          table_whour = new javax.swing.JTable(whourModel);  CONSTRACTERDAN SONRA YAZMALISIN 

        DefaultTableModel clearModel = (DefaultTableModel) table_whour.getModel();
        clearModel.setRowCount(0);
        for (int i = 0; i < doctor.getWhourList(doctor.getUser_id()).size(); i++) {
            whourData[0] = doctor.getWhourList(doctor.getUser_id()).get(i).getDoctor_id();
/* sıkıntı getdoctor_id ?? */            whourData[1] = doctor.getWhourList(doctor.getUser_id()).get(i).getWdate();
            whourModel.addRow(whourData);
        }
    }

    private void btn_addWhourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addWhourActionPerformed
        // TODO add your handling code here: 
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = "";
        try {
            date = sdf.format(select_date.getDate());
        } catch (Exception e2) {
        }

        if (date.length() == 0) {
            Helper.showMsg("Please enter a valid date");
        } else {
            String time = " " + select_time.getSelectedItem().toString() + ":00";
            String selectDate = date + time;
            try {
                boolean control = doctor.addWhour(doctor.getUser_id(), doctor.getUser_name(), selectDate);
                if (control) {
                    Helper.showMsg("success");
                    updateWhourModel(doctor);

                } else {
                    Helper.showMsg("error");
                }
            } catch (SQLException e1) {
                e1.printStackTrace();
            }
        }
    }//GEN-LAST:event_btn_addWhourActionPerformed

    private void btn_deleteWhourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_deleteWhourActionPerformed
        // TODO add your handling code here:
        int selRow = table_whour.getSelectedRow();
        if (selRow > 0) {
            String selectRow = table_whour.getModel().getValueAt(selRow, 0).toString();
            int selID = Integer.parseInt(selectRow);
            boolean control;
            try {
                control = doctor.deleteWhour(selID);
                if (control) {
                    Helper.showMsg("success");
                    updateWhourModel(doctor);
                } else {
                    Helper.showMsg("error");
                }
            } catch (SQLException e1) {
                e1.printStackTrace();
            }

        } else {
            Helper.showMsg("Please select a date");
        }

    }//GEN-LAST:event_btn_deleteWhourActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LoginGUI login = new LoginGUI();
        login.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DoctorGUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    DoctorGUI frame = new DoctorGUI(doctor);
                    new DoctorGUI(doctor).setVisible(true);
                } catch (Exception e) {
                }

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addWhour;
    private javax.swing.JButton btn_deleteWhour;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private com.toedter.calendar.JDateChooser select_date;
    private javax.swing.JComboBox<String> select_time;
    private javax.swing.JTable table_whour;
    private javax.swing.JScrollPane w_scrollWhour;
    private javax.swing.JTabbedPane w_tab;
    private javax.swing.JPanel w_whour;
    // End of variables declaration//GEN-END:variables
}
